{"version":3,"names":["isAsync","waitFor","path","pathToFileURL","createRequire","semver","buildDebug","endHiddenCallStack","ConfigError","transformFileSync","debug","require","import","meta","url","supportsESM","satisfies","process","versions","node","loadCodeDefault","filepath","asyncError","extname","loadCjsDefault","loadCtsDefault","e","code","loadMjsDefault","ext","hasTsSupport","extensions","handler","opts","babelrc","configFile","sourceType","sourceMaps","sourceFileName","basename","presets","getTSPreset","Object","assign","onlyRemoveTypeImports","optimizeConstEnums","m","filename","endsWith","_compile","error","packageJson","lt","version","console","undefined","LOADING_CJS_FILES","Set","has","module","add","delete","__esModule","default","toString","message"],"sources":["../../../src/config/files/module-types.ts"],"sourcesContent":["import { isAsync, waitFor } from \"../../gensync-utils/async.ts\";\nimport type { Handler } from \"gensync\";\nimport path from \"path\";\nimport { pathToFileURL } from \"url\";\nimport { createRequire } from \"module\";\nimport semver from \"semver\";\nimport buildDebug from \"debug\";\n\nimport { endHiddenCallStack } from \"../../errors/rewrite-stack-trace.ts\";\nimport ConfigError from \"../../errors/config-error.ts\";\n\nimport type { InputOptions } from \"../index.ts\";\nimport { transformFileSync } from \"../../transform-file.ts\";\n\nconst debug = buildDebug(\"babel:config:loading:files:module-types\");\n\nconst require = createRequire(import.meta.url);\n\nif (!process.env.BABEL_8_BREAKING) {\n  try {\n    // Old Node.js versions don't support import() syntax.\n    // eslint-disable-next-line no-var\n    var import_:\n      | ((specifier: string | URL) => any)\n      | undefined = require(\"./import.cjs\");\n  } catch {}\n}\n\nexport const supportsESM = semver.satisfies(\n  process.versions.node,\n  // older versions, starting from 10, support the dynamic\n  // import syntax but always return a rejected promise.\n  \"^12.17 || >=13.2\",\n);\n\nexport default function* loadCodeDefault(\n  filepath: string,\n  asyncError: string,\n): Handler<unknown> {\n  switch (path.extname(filepath)) {\n    case \".cjs\":\n      if (process.env.BABEL_8_BREAKING) {\n        return loadCjsDefault(filepath);\n      } else {\n        return loadCjsDefault(\n          filepath,\n          // @ts-ignore(Babel 7 vs Babel 8) Removed in Babel 8\n          /* fallbackToTranspiledModule */ arguments[2],\n        );\n      }\n    case \".mjs\":\n      break;\n    case \".cts\":\n      return loadCtsDefault(filepath);\n    default:\n      try {\n        if (process.env.BABEL_8_BREAKING) {\n          return loadCjsDefault(filepath);\n        } else {\n          return loadCjsDefault(\n            filepath,\n            // @ts-ignore(Babel 7 vs Babel 8) Removed in Babel 8\n            /* fallbackToTranspiledModule */ arguments[2],\n          );\n        }\n      } catch (e) {\n        if (e.code !== \"ERR_REQUIRE_ESM\") throw e;\n      }\n  }\n  if (yield* isAsync()) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return yield* waitFor(loadMjsDefault(filepath));\n  }\n  throw new ConfigError(asyncError, filepath);\n}\n\nfunction loadCtsDefault(filepath: string) {\n  const ext = \".cts\";\n  const hasTsSupport = !!(\n    require.extensions[\".ts\"] ||\n    require.extensions[\".cts\"] ||\n    require.extensions[\".mts\"]\n  );\n\n  let handler: NodeJS.RequireExtensions[\"\"];\n\n  if (!hasTsSupport) {\n    const opts: InputOptions = {\n      babelrc: false,\n      configFile: false,\n      sourceType: \"unambiguous\",\n      sourceMaps: \"inline\",\n      sourceFileName: path.basename(filepath),\n      presets: [\n        [\n          getTSPreset(filepath),\n          {\n            onlyRemoveTypeImports: true,\n            optimizeConstEnums: true,\n            ...(process.env.BABEL_8_BREAKING\n              ? {}\n              : { allowDeclareFields: true }),\n          },\n        ],\n      ],\n    };\n\n    handler = function (m, filename) {\n      // If we want to support `.ts`, `.d.ts` must be handled specially.\n      if (handler && filename.endsWith(ext)) {\n        try {\n          // @ts-expect-error Undocumented API\n          return m._compile(\n            transformFileSync(filename, {\n              ...opts,\n              filename,\n            }).code,\n            filename,\n          );\n        } catch (error) {\n          if (!hasTsSupport) {\n            // TODO(Babel 8): Add this as an optional peer dependency\n            // eslint-disable-next-line import/no-extraneous-dependencies\n            const packageJson = require(\"@babel/preset-typescript/package.json\");\n            if (semver.lt(packageJson.version, \"7.21.4\")) {\n              console.error(\n                \"`.cts` configuration file failed to load, please try to update `@babel/preset-typescript`.\",\n              );\n            }\n          }\n          throw error;\n        }\n      }\n      return require.extensions[\".js\"](m, filename);\n    };\n    require.extensions[ext] = handler;\n  }\n  try {\n    return loadCjsDefault(filepath);\n  } finally {\n    if (!hasTsSupport) {\n      if (require.extensions[ext] === handler) delete require.extensions[ext];\n      handler = undefined;\n    }\n  }\n}\n\nconst LOADING_CJS_FILES = new Set();\n\nfunction loadCjsDefault(filepath: string) {\n  // The `require()` call below can make this code reentrant if a require hook\n  // like @babel/register has been loaded into the system. That would cause\n  // Babel to attempt to compile the `.babelrc.js` file as it loads below. To\n  // cover this case, we auto-ignore re-entrant config processing. ESM loaders\n  // do not have this problem, because loaders do not apply to themselves.\n  if (LOADING_CJS_FILES.has(filepath)) {\n    debug(\"Auto-ignoring usage of config %o.\", filepath);\n    return {};\n  }\n\n  let module;\n  try {\n    LOADING_CJS_FILES.add(filepath);\n    module = endHiddenCallStack(require)(filepath);\n  } finally {\n    LOADING_CJS_FILES.delete(filepath);\n  }\n\n  if (process.env.BABEL_8_BREAKING) {\n    return module?.__esModule ? module.default : module;\n  } else {\n    return module?.__esModule\n      ? module.default ||\n          /* fallbackToTranspiledModule */ (arguments[1] ? module : undefined)\n      : module;\n  }\n}\n\nconst loadMjsDefault = endHiddenCallStack(async function loadMjsDefault(\n  filepath: string,\n) {\n  const url = pathToFileURL(filepath).toString();\n\n  if (process.env.BABEL_8_BREAKING) {\n    return (await import(url)).default;\n  } else {\n    if (!import_) {\n      throw new ConfigError(\n        \"Internal error: Native ECMAScript modules aren't supported by this platform.\\n\",\n        filepath,\n      );\n    }\n\n    return (await import_(url)).default;\n  }\n});\n\nfunction getTSPreset(filepath: string) {\n  try {\n    // eslint-disable-next-line import/no-extraneous-dependencies\n    return require(\"@babel/preset-typescript\");\n  } catch (error) {\n    if (error.code !== \"MODULE_NOT_FOUND\") throw error;\n\n    let message =\n      \"You appear to be using a .cts file as Babel configuration, but the `@babel/preset-typescript` package was not found: please install it!\";\n\n    if (!process.env.BABEL_8_BREAKING) {\n      if (process.versions.pnp) {\n        // Using Yarn PnP, which doesn't allow requiring packages that are not\n        // explicitly specified as dependencies.\n        message += `\nIf you are using Yarn Plug'n'Play, you may also need to add the following configuration to your .yarnrc.yml file:\n\npackageExtensions:\n\\t\"@babel/core@*\":\n\\t\\tpeerDependencies:\n\\t\\t\\t\"@babel/preset-typescript\": \"*\"\n`;\n      }\n    }\n\n    throw new ConfigError(message, filepath);\n  }\n}\n"],"mappings":"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","ignoreList":[]}