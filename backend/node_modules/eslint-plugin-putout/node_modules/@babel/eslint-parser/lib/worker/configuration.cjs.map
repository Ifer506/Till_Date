{"version":3,"names":["babel","require","ESLINT_VERSION","getParserPlugins","babelOptions","babelParserPlugins","parserOpts","plugins","estreeOptions","classFeatures","plugin","Array","isArray","Object","assign","normalizeParserOptions","options","sourceType","filename","filePath","allowReturnOutsideFunction","ecmaFeatures","globalReturn","attachComment","ranges","tokens","caller","name","validateResolvedConfig","config","parseOptions","requireConfigFile","hasFilesystemConfig","error","includes","Error","getDefaultParserOptions","babelrc","configFile","browserslistConfigFile","ignore","only","normalizeBabelParseConfig","loadPartialConfigAsync","normalizeBabelParseConfigSync","loadPartialConfigSync"],"sources":["../../src/worker/configuration.cts"],"sourcesContent":["import babel = require(\"./babel-core.cts\");\nimport ESLINT_VERSION = require(\"../utils/eslint-version.cts\");\nimport type { InputOptions } from \"@babel/core\";\nimport type { Options } from \"../types.cts\";\nimport type { PartialConfig } from \"../../../../packages/babel-core/src/config\";\n\n/**\n * Merge user supplied estree plugin options to default estree plugin options\n *\n * @returns {Array} Merged parser plugin descriptors\n */\nfunction getParserPlugins(\n  babelOptions: InputOptions,\n): InputOptions[\"parserOpts\"][\"plugins\"] {\n  const babelParserPlugins = babelOptions.parserOpts?.plugins ?? [];\n  const estreeOptions = { classFeatures: ESLINT_VERSION >= 8 };\n  for (const plugin of babelParserPlugins) {\n    if (Array.isArray(plugin) && plugin[0] === \"estree\") {\n      Object.assign(estreeOptions, plugin[1]);\n      break;\n    }\n  }\n  // estree must be the first parser plugin to work with other parser plugins\n  return [[\"estree\", estreeOptions], ...babelParserPlugins];\n}\n\nfunction normalizeParserOptions(options: Options): InputOptions & {\n  showIgnoredFiles?: boolean;\n} {\n  return {\n    sourceType: options.sourceType,\n    filename: options.filePath,\n    ...options.babelOptions,\n    parserOpts: {\n      ...(process.env.BABEL_8_BREAKING\n        ? {}\n        : {\n            allowImportExportEverywhere:\n              options.allowImportExportEverywhere ?? false,\n            allowSuperOutsideMethod: true,\n          }),\n      allowReturnOutsideFunction:\n        options.ecmaFeatures?.globalReturn ??\n        (process.env.BABEL_8_BREAKING ? false : true),\n      ...options.babelOptions.parserOpts,\n      plugins: getParserPlugins(options.babelOptions),\n      // skip comment attaching for parsing performance\n      attachComment: false,\n      ranges: true,\n      tokens: true,\n    },\n    caller: {\n      name: \"@babel/eslint-parser\",\n      ...options.babelOptions.caller,\n    },\n  };\n}\n\nfunction validateResolvedConfig(\n  config: PartialConfig,\n  options: Options,\n  parseOptions: InputOptions,\n) {\n  if (config !== null) {\n    if (options.requireConfigFile !== false) {\n      if (!config.hasFilesystemConfig()) {\n        let error = `No Babel config file detected for ${config.options.filename}. Either disable config file checking with requireConfigFile: false, or configure Babel so that it can find the config files.`;\n\n        if (config.options.filename.includes(\"node_modules\")) {\n          error += `\\nIf you have a .babelrc.js file or use package.json#babel, keep in mind that it's not used when parsing dependencies. If you want your config to be applied to your whole app, consider using babel.config.js or babel.config.json instead.`;\n        }\n\n        throw new Error(error);\n      }\n    }\n    if (config.options) return config.options;\n  }\n\n  return getDefaultParserOptions(parseOptions);\n}\n\nfunction getDefaultParserOptions(options: InputOptions): InputOptions {\n  return {\n    plugins: [],\n    ...options,\n    babelrc: false,\n    configFile: false,\n    browserslistConfigFile: false,\n    ignore: null,\n    only: null,\n  };\n}\n\nexport async function normalizeBabelParseConfig(\n  options: Options,\n): Promise<InputOptions> {\n  const parseOptions = normalizeParserOptions(options);\n  const config = await babel.loadPartialConfigAsync(parseOptions);\n  return validateResolvedConfig(config, options, parseOptions);\n}\n\nexport function normalizeBabelParseConfigSync(options: Options): InputOptions {\n  const parseOptions = normalizeParserOptions(options);\n  const config = babel.loadPartialConfigSync(parseOptions);\n  return validateResolvedConfig(config, options, parseOptions);\n}\n"],"mappings":"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","ignoreList":[]}