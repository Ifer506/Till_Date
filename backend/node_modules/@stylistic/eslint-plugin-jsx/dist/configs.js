import { c as createAllConfigs } from './utils.js';
import jsxChildElementSpacing from './rules/jsx-child-element-spacing.js';
import jsxClosingBracketLocation from './rules/jsx-closing-bracket-location.js';
import jsxClosingTagLocation from './rules/jsx-closing-tag-location.js';
import jsxCurlyBracePresence from './rules/jsx-curly-brace-presence.js';
import jsxCurlyNewline from './rules/jsx-curly-newline.js';
import jsxCurlySpacing from './rules/jsx-curly-spacing.js';
import jsxEqualsSpacing from './rules/jsx-equals-spacing.js';
import jsxFirstPropNewLine from './rules/jsx-first-prop-new-line.js';
import jsxFunctionCallNewline from './rules/jsx-function-call-newline.js';
import jsxIndentProps from './rules/jsx-indent-props.js';
import jsxIndent from './rules/jsx-indent.js';
import jsxMaxPropsPerLine from './rules/jsx-max-props-per-line.js';
import jsxNewline from './rules/jsx-newline.js';
import jsxOneExpressionPerLine from './rules/jsx-one-expression-per-line.js';
import jsxPascalCase from './rules/jsx-pascal-case.js';
import jsxPropsNoMultiSpaces from './rules/jsx-props-no-multi-spaces.js';
import jsxSelfClosingComp from './rules/jsx-self-closing-comp.js';
import jsxSortProps from './rules/jsx-sort-props.js';
import jsxTagSpacing from './rules/jsx-tag-spacing.js';
import jsxWrapMultilines from './rules/jsx-wrap-multilines.js';

var rules = {
  "jsx-child-element-spacing": jsxChildElementSpacing,
  "jsx-closing-bracket-location": jsxClosingBracketLocation,
  "jsx-closing-tag-location": jsxClosingTagLocation,
  "jsx-curly-brace-presence": jsxCurlyBracePresence,
  "jsx-curly-newline": jsxCurlyNewline,
  "jsx-curly-spacing": jsxCurlySpacing,
  "jsx-equals-spacing": jsxEqualsSpacing,
  "jsx-first-prop-new-line": jsxFirstPropNewLine,
  "jsx-function-call-newline": jsxFunctionCallNewline,
  "jsx-indent": jsxIndent,
  "jsx-indent-props": jsxIndentProps,
  "jsx-max-props-per-line": jsxMaxPropsPerLine,
  "jsx-newline": jsxNewline,
  "jsx-one-expression-per-line": jsxOneExpressionPerLine,
  "jsx-pascal-case": jsxPascalCase,
  "jsx-props-no-multi-spaces": jsxPropsNoMultiSpaces,
  "jsx-self-closing-comp": jsxSelfClosingComp,
  "jsx-sort-props": jsxSortProps,
  "jsx-tag-spacing": jsxTagSpacing,
  "jsx-wrap-multilines": jsxWrapMultilines
};

var plugin = {
  rules
};

const config = {
  rules: {
    "react/jsx-child-element-spacing": 0,
    "react/jsx-closing-bracket-location": 0,
    "react/jsx-closing-tag-location": 0,
    "react/jsx-curly-brace-presence": 0,
    "react/jsx-curly-newline": 0,
    "react/jsx-curly-spacing": 0,
    "react/jsx-equals-spacing": 0,
    "react/jsx-first-prop-new-line": 0,
    "react/jsx-function-call-newline": 0,
    "react/jsx-indent": 0,
    "react/jsx-indent-props": 0,
    "react/jsx-max-props-per-line": 0,
    "react/jsx-newline": 0,
    "react/jsx-one-expression-per-line": 0,
    "react/jsx-pascal-case": 0,
    "react/jsx-props-no-multi-spaces": 0,
    "react/jsx-self-closing-comp": 0,
    "react/jsx-sort-props": 0,
    "react/jsx-tag-spacing": 0,
    "react/jsx-wrap-multilines": 0
  }
};

const all = /* @__PURE__ */ createAllConfigs(plugin, "@stylistic/jsx");
const configs = {
  "disable-legacy": config,
  all,
  /**
   * @deprecated use `all` instead.
   */
  "all-flat": all
};

export { configs as c, plugin as p };
